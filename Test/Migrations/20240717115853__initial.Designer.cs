// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Domain;

#nullable disable

namespace Test.Migrations
{
    [DbContext(typeof(PriceContext))]
    [Migration("20240717115853__initial")]
    partial class _initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ColumnPriceList", b =>
                {
                    b.Property<int>("Columnsid")
                        .HasColumnType("int");

                    b.Property<int>("priceListsid")
                        .HasColumnType("int");

                    b.HasKey("Columnsid", "priceListsid");

                    b.HasIndex("priceListsid");

                    b.ToTable("ColumnPriceList");
                });

            modelBuilder.Entity("PriceListProduct", b =>
                {
                    b.Property<int>("Productsid")
                        .HasColumnType("int");

                    b.Property<int>("priceListsid")
                        .HasColumnType("int");

                    b.HasKey("Productsid", "priceListsid");

                    b.HasIndex("priceListsid");

                    b.ToTable("PriceListProduct");
                });

            modelBuilder.Entity("Test.Domain.Entites.Column", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            id = 1,
                            DataType = "Текст",
                            Name = "Название товара"
                        },
                        new
                        {
                            id = 2,
                            DataType = "Число",
                            Name = "Код товара"
                        });
                });

            modelBuilder.Entity("Test.Domain.Entites.PriceList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("priceLists");
                });

            modelBuilder.Entity("Test.Domain.Entites.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ColumnPriceList", b =>
                {
                    b.HasOne("Test.Domain.Entites.Column", null)
                        .WithMany()
                        .HasForeignKey("Columnsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test.Domain.Entites.PriceList", null)
                        .WithMany()
                        .HasForeignKey("priceListsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PriceListProduct", b =>
                {
                    b.HasOne("Test.Domain.Entites.Product", null)
                        .WithMany()
                        .HasForeignKey("Productsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test.Domain.Entites.PriceList", null)
                        .WithMany()
                        .HasForeignKey("priceListsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
